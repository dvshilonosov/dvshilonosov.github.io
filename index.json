
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"My name is Danil Shilonosov, and I am a student of Computer and Information Science.\nI am passionate about programming in C++ and devote a significant amount of time to studying and developing programs in this language.\nI am a member of several IT communities where I communicate with like-minded people and participate in projects related to programming and software development.\nI actively participate in the learning process and demonstrate high academic performance and diligence. My plans include obtaining a qualified education and developing professional skills in the field of programming.\n","date":1554595200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1554595200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"My name is Danil Shilonosov, and I am a student of Computer and Information Science.\nI am passionate about programming in C++ and devote a significant amount of time to studying and developing programs in this language.","tags":null,"title":"Shilonosov Danil","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"How to make a website yourself: all the ways\nFor those who want to develop a website, today you can choose any of 3 options:\nwrite a project from scratch in HTML, CSS and Javascript; collect it on the website builder; run through the CMS system. The first option for creating websites is the most time-consuming of all. To tell from and to about all the stages and processes in it, even one long article is not enough. Therefore, we will talk about this method next time. But if the easy way isn’t for you, start learning these languages with the Skysmart website building course. There we will talk about the features of each of them, teach you how to code and introduce you to the basics of web design.\nAnd in this article we will analyze the last two methods: website builders and CMS systems. What are CMS systems and how to create sites on them\nFirst, let’s figure out what lies behind this abbreviation - CMS.\nCMS is a content management system; a special program with a wide range of functions that allows you to create, edit and manage content on the site.\nSimply put, CMS is a kind of engine for Internet resources, with which you can customize them. Now let’s take a quick look at a few popular CMS systems and compare them with each other. WordPress\nWordPress is one of the most popular CMS platforms. It has many ready-made templates, and you can also create a blog, business card site and other projects based on this platform for free. And all this - without knowing the code! The best thing is to make your first website on your own.\nAnd if you also set up plugins and add to this the skills of working with the PHP programming language, you can increase the capabilities of Wordpress beyond its basic ones.\nBenefits of WordPress\nTo understand why this CMS is so popular, let’s look at some of its advantages.\nYou can create a website on the platform for free. You only pay for the domain name and hosting. Moreover, both can also be found in the free version due to trial periods, etc. Just install the program. You can set up WordPress for work in a few clicks. Auto update. When a newer version of the CMS is released, it will be installed automatically. Intuitive work. WordPress has a clear interface: one glance at the button is enough to understand what it is for. Lots of templates. On the platform, you can find a bunch of ready-made solutions for sites of various formats: online blogs, information resources, etc. This makes it easy for a beginner to create sites on WordPress. The platform automatically adapts the site for different devices. This allows your projects to remain relevant to people who visit them from smartphones, PCs, laptops and tablets. \u0026#34;Living\u0026#34; community. If you have any problems while working on the site, you can always find the answer to any question on the forum. And if it didn’t work out, just ask it and you will definitely be answered. Disadvantages of WordPress\nAs good as this platform is, it also has its downsides. Let’s take a look at a few of them. This will help avoid unpleasant surprises if you ever want to work on it.\nMany plugins are made by third party developers. This means that they may not be compatible with official WordPress updates. And they also have errors that can “break” your design, and even viruses. Safety. WordPress is open source software. This means that it is easier for fraudsters to find weaknesses in it in order to use your project for their own purposes. No technical support from developers. If you run into a problem, you can not expect that you will write one letter and everything will be decided for you. On the other hand, we already wrote above about the developed WordPress community, which you can come to for advice. We briefly talked about WordPress, but do not think that this is where our acquaintance with this CMS ended. In the second part of the article, we will return to it to understand how it works and how to create your first site on it from scratch. opencart\nOpenCart is a shareware CMS system popular in Russia. It is mainly suitable for the development of online stores. For example, in the Russian Federation, more than 30% of e-commerce projects have been assembled on the basis of this platform. Those who have already used OpenCart say that it is convenient to use and easy to install. And also that it is suitable for those who want to save money on creating a website.\nBenefits of OpenCart\nNow let’s talk about why users like this platform:\nDeveloped community. As with WordPress, OpenCart has many live forums where extensions, beginner guides, and new themes are posted. And there you can always ask for advice from more experienced users if you encounter a problem. Analytics system. It is built into OpenCart, but if its basic functions are not enough, you can expand them by connecting Google Analytics or Yandex.Metrica. Good set of basic features. You can set up product filters, connect the desired payment system, add a subscription function, and much more. You can …","date":1683936000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683936000,"objectID":"e8f8d235e8e7f2efd912bfe865363fc3","permalink":"https://example.com/project/example/","publishdate":"2023-05-13T00:00:00Z","relpermalink":"/project/example/","section":"project","summary":"Here you will learn how to create websites.","tags":["Programming"],"title":"Website creation","type":"project"},{"authors":null,"categories":null,"content":"Preliminaries Markdown basics To create a title, use the sign ( # ), for example:\nThis is heading 1 This is heading 2 This is heading 3 This is heading 4 To make text bold, enclose it in double asterisks:\nThis text is bold. To make text italic, enclose it in single asterisks: This text is italic. To make text bold and italic, enclose it in triple asterisks: This is text is both bold and italic. Quote blocks are created using the \u0026gt; symbol: The drought had lasted now for ten million years, and the reign of the terrible lizards had long since ended. Here on the Equator, in the continent which would one day be known as Africa, the battle for existence had reached a new climax of ferocity, and the victor was not yet in sight. In this barren and desiccated land, only the small or the swift or the fierce could flourish, or even hope to survive. ↪ ↪ ↪ ↪ ↪ ↪ An unordered (bulleted) list can be formatted with an asterisk. daughter or dash:\nList item 1 List item 2 List item 3 ","date":1562889600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1562889600,"objectID":"a0ade9b4b218a8a455292eee739b86e8","permalink":"https://example.com/post/markdown/","publishdate":"2019-07-12T00:00:00Z","relpermalink":"/post/markdown/","section":"post","summary":"Preliminaries Markdown basics To create a title, use the sign ( # ), for example:\nThis is heading 1 This is heading 2 This is heading 3 This is heading 4 To make text bold, enclose it in double asterisks:","tags":null,"title":"Writing technical content in Markdown","type":"post"},{"authors":["Shilonosov Danil"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://example.com/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":null,"categories":null,"content":"","date":1461715200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1461715200,"objectID":"d1311ddf745551c9e117aa4bb7e28516","permalink":"https://example.com/project/external-project/","publishdate":"2016-04-27T00:00:00Z","relpermalink":"/project/external-project/","section":"project","summary":"An example of linking directly to an external project website using `external_link`.","tags":["Demo"],"title":"External Project","type":"project"},{"authors":["Shilonosov Danil","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://example.com/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Shilonosov Danil","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://example.com/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"},{"authors":null,"categories":null,"content":"Theoretical introduction A command processor (command shell, shell command interpreter) is a program that allows the user to interact with the computer’s operating system. On UNIX/Linux operating systems, the following shell implementations are most commonly used:\nBourne shell (sh) is a standard UNIX/Linux command shell containing a basic but complete set of functions; C-shell (or csh) - an add-on to the Bourne shell that uses a C-like command syntax with the ability to save the history of command execution; the Korn shell (or ksh) - resembles the C shell, but the program control statements are compatible with the Bourne shell statements; BASH - short for Bourne Again Shell (Bourne shell again), basically combines the properties of C and Korn shells (developed by the Free Software Foundation). POSIX (Portable Operating System Interface for Computer Environments) is a set of standards for describing the interfaces between the operating system and application programs. The POSIX standards were developed by the IEEE (Institute of Electrical and Electronics Engineers) to ensure compatibility between different UNIX/Linux-like operating systems and portability of application programs at the source code level. POSIX-compliant shells are based on the Korn shell. ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"89272b2c2954d75e11f13ee38e577881","permalink":"https://example.com/post/shell/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/post/shell/","section":"post","summary":"Theoretical introduction A command processor (command shell, shell command interpreter) is a program that allows the user to interact with the computer’s operating system. On UNIX/Linux operating systems, the following shell implementations are most commonly used:","tags":null,"title":"Command processors (shells)","type":"post"},{"authors":null,"categories":null,"content":"Theoretical introduction Scientific programming languages are programming languages specially designed to solve problems in scientific fields such as mathematics, physics, chemistry, biology, and others.\nOne of the most common scientific programming languages is MATLAB, which is used for numerical calculations, data processing, and visualization of results. MATLAB has a rich library of functions and tools that allow you to solve various problems in the field of scientific research.\nAnother famous programming language for scientific purposes is R. It is used for statistical data analysis and machine learning. R has a powerful library of packages that allow researchers to perform various analyzes and create graphs.\nPython has also become a popular programming language in scientific fields due to its simplicity and flexibility. It is widely used for scientific computing, image processing and data analysis.\nEach of these programming languages has its advantages and disadvantages, and the choice of language depends on the specific task and needs of the researcher. However, they all provide tools for solving complex problems in scientific fields and continue to evolve and improve over time.\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"b90c80dc209c8568d202e74c35aecd19","permalink":"https://example.com/post/spl/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/post/spl/","section":"post","summary":"Theoretical introduction Scientific programming languages are programming languages specially designed to solve problems in scientific fields such as mathematics, physics, chemistry, biology, and others.\nOne of the most common scientific programming languages is MATLAB, which is used for numerical calculations, data processing, and visualization of results.","tags":null,"title":"Scientific programming languages","type":"post"},{"authors":null,"categories":null,"content":"Theoretical introduction Instructions for work Most Linux distributions install vi (Visual display editor) as the default text editor. The vi editor has three modes of operation:\ncommand mode - designed to enter commands for editing and navigating through the file being edited; insert mode - designed to enter the content of the edited file; last (or command) line mode - used to write changes to a file and exit the editor. To call the vi editor, you must specify the vi command and the name of the file being edited: vi \u0026lt;file_name\u0026gt; In this case, if there is no file with the specified name, such a file will be created. Switching to command mode is done by pressing the Esc key. To exit the vi editor, you need to switch to the last line mode: while in command mode, press Shift-; (essentially the character : is a colon), then:\ntype wq characters if you want to write changes to the file before exiting the editor; type q (or q!) if you want to exit the editor without saving. Comment. Remember that vi distinguishes between uppercase and lowercase letters when typing (perceiving) commands.\nMain groups of editor commands Position commands 0 (zero) - go to the beginning of the line; $ - go to the end of the line; G - go to the end of the file; n G — go to the line with number n. File navigation commands Ctrl-d - go half a screen forward; Ctrl-u - go half a screen back; Ctrl-f - go to the page forward; Ctrl-b - go back a page. Word movement commands1 W or w - go one word forward; n W or n w — go forward n words; b or B - go back a word; n b or n B - go back n words. Edit commands Insert text a - insert text after the cursor; A - insert text at the end of the line; i - insert text before the cursor; n i - insert text n times; I - insert text at the beginning of the line. Insert a line o - insert a line under the cursor; O - insert a line above the cursor. Delete text x - delete one character in the buffer; d w - delete one word in the buffer; d $ - delete text from the cursor to the end of the line into the buffer; d 0 - delete text from the beginning of the line to the cursor position into the buffer; d d - delete one line into the buffer; n d d — delete n lines into the buffer. Cancel and redo changes made u - undo the last change; . - redo last change. Copy text to clipboard Y - copy the string to the clipboard; n Y — copy n lines to the buffer; y w - copy the word to the clipboard. Paste text from clipboard p - paste text from the buffer after the cursor; P - paste text from the buffer before the cursor. Replace text c w - replace the word; n c w - replace n words; c $ - replace the text from the cursor to the end of the line; r - replace the word; R - replace text. Search text / text - search forward in the text of the specified string of characters text; ? text - search backwards through the text of the specified character string text. Edit commands in command line mode Copy and move text : n,m d — delete lines from n to m; : i,j m k — move rows i through j, starting from row k; : i,j t k — copy lines from i to j into line k; : i,j w filename - write lines i through j to a file named filename. Write to file and exit editor : w - write the changed text to a file without leaving vi; : w filename - write the changed text to a new file named filename; :w! filename - write the changed text to a file named filename; : w q - write changes to file and exit vi; : q - exit the vi editor; : q ! — exit the editor without writing; :e! - return to command mode, canceling all changes made since the last entry. Options The vi editor options allow you to customize your working environment. To set options, use the set command (in last line mode):\n\u0026lt;:\u0026gt; set all - display the full list of options; \u0026lt;:\u0026gt; set nu - display line numbers; : set list - display invisible characters; : set ic - do not take into account when searching whether the character is uppercase or lowercase. If you don’t want to use an option, you must prefix the option name with no in the set command. ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"aa1df0afd578924cb0242310cadd7ae1","permalink":"https://example.com/post/vim/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/post/vim/","section":"post","summary":"Theoretical introduction Instructions for work Most Linux distributions install vi (Visual display editor) as the default text editor. The vi editor has three modes of operation:\ncommand mode - designed to enter commands for editing and navigating through the file being edited; insert mode - designed to enter the content of the edited file; last (or command) line mode - used to write changes to a file and exit the editor.","tags":null,"title":"Vim editor","type":"post"}]